{"ast":null,"code":"var _jsxFileName = \"/Users/francesco/Documents/Progetti/frontend-assessment/src/components/searchBar/SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { getPlayers } from \"../../api/Api\";\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchContainer = styled.div`\n    margin: 50px 0;\n`;\n_c = SearchContainer;\nexport const SearchBar = ({\n  updatePlayer\n}) => {\n  _s();\n\n  const [players, setPlayers] = useState([]);\n  const [searchIsLoading, setSearchIsLoading] = useState(false);\n\n  const onSearchPlayers = query => {\n    setSearchIsLoading(true);\n    getPlayers(query).then(data => {\n      setPlayers(data); //updatePlayer(currentPlayer);\n    }).catch(err => console.log(err)).finally(() => setSearchIsLoading(false));\n  };\n\n  const onChangePlayer = selectPlayer => {\n    updatePlayer(selectPlayer);\n  };\n\n  return /*#__PURE__*/_jsxDEV(SearchContainer, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(AsyncTypeahead, {\n          id: \"playerSearch\",\n          isLoading: searchIsLoading,\n          labelKey: option => `${option.first_name} ${option.last_name}`,\n          onSearch: onSearchPlayers,\n          options: players,\n          placeholder: \"Enter first name and last name\",\n          onChange: onChangePlayer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchBar, \"QBMqtdhXXmbY3n0tcN7j3v5NH0I=\");\n\n_c2 = SearchBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchContainer\");\n$RefreshReg$(_c2, \"SearchBar\");","map":{"version":3,"sources":["/Users/francesco/Documents/Progetti/frontend-assessment/src/components/searchBar/SearchBar.js"],"names":["React","useState","Row","Col","getPlayers","AsyncTypeahead","styled","SearchContainer","div","SearchBar","updatePlayer","players","setPlayers","searchIsLoading","setSearchIsLoading","onSearchPlayers","query","then","data","catch","err","console","log","finally","onChangePlayer","selectPlayer","option","first_name","last_name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,iBAAvB;AACA,SAAQC,UAAR,QAAyB,eAAzB;AACA,SAAQC,cAAR,QAA6B,2BAA7B;AACA,OAAO,6CAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,eAAe,GAAGD,MAAM,CAACE,GAAI;AACnC;AACA,CAFA;KAAMD,e;AAIN,OAAO,MAAME,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAoB;AAAA;;AACzC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,eAAD,EAAkBC,kBAAlB,IAAwCb,QAAQ,CAAC,KAAD,CAAtD;;AAEA,QAAMc,eAAe,GAAIC,KAAD,IAAW;AAC/BF,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAV,IAAAA,UAAU,CAACY,KAAD,CAAV,CACKC,IADL,CACUC,IAAI,IAAI;AACVN,MAAAA,UAAU,CAACM,IAAD,CAAV,CADU,CAEV;AACH,KAJL,EAKKC,KALL,CAKWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALlB,EAMKG,OANL,CAMa,MAAMT,kBAAkB,CAAC,KAAD,CANrC;AAOH,GATD;;AAWA,QAAMU,cAAc,GAAIC,YAAD,IAAkB;AACrCf,IAAAA,YAAY,CAACe,YAAD,CAAZ;AACH,GAFD;;AAIA,sBACI,QAAC,eAAD;AAAA,2BACI,QAAC,GAAD;AAAA,6BACI,QAAC,GAAD;AAAA,+BACI,QAAC,cAAD;AACI,UAAA,EAAE,EAAC,cADP;AAEI,UAAA,SAAS,EAAEZ,eAFf;AAGI,UAAA,QAAQ,EAAEa,MAAM,IAAK,GAAEA,MAAM,CAACC,UAAW,IAAGD,MAAM,CAACE,SAAU,EAHjE;AAII,UAAA,QAAQ,EAAEb,eAJd;AAKI,UAAA,OAAO,EAAEJ,OALb;AAMI,UAAA,WAAW,EAAC,gCANhB;AAOI,UAAA,QAAQ,EAAEa;AAPd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CApCM;;GAAMf,S;;MAAAA,S","sourcesContent":["import React, {useState} from 'react';\nimport {Row, Col} from 'react-bootstrap';\nimport {getPlayers} from \"../../api/Api\";\nimport {AsyncTypeahead} from 'react-bootstrap-typeahead';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport styled from 'styled-components';\n\nconst SearchContainer = styled.div`\n    margin: 50px 0;\n`\n\nexport const SearchBar = ({updatePlayer}) => {\n    const [players, setPlayers] = useState([]);\n    const [searchIsLoading, setSearchIsLoading] = useState(false);\n\n    const onSearchPlayers = (query) => {\n        setSearchIsLoading(true);\n        getPlayers(query)\n            .then(data => {\n                setPlayers(data);\n                //updatePlayer(currentPlayer);\n            })\n            .catch(err => console.log(err))\n            .finally(() => setSearchIsLoading(false));\n    }\n\n    const onChangePlayer = (selectPlayer) => {\n        updatePlayer(selectPlayer);\n    }\n\n    return (\n        <SearchContainer>\n            <Row>\n                <Col>\n                    <AsyncTypeahead\n                        id=\"playerSearch\"\n                        isLoading={searchIsLoading}\n                        labelKey={option => `${option.first_name} ${option.last_name}`}\n                        onSearch={onSearchPlayers}\n                        options={players}\n                        placeholder=\"Enter first name and last name\"\n                        onChange={onChangePlayer}\n                    />\n                </Col>\n            </Row>\n        </SearchContainer>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/francesco/Documents/Progetti/frontend-assessment/src/components/playerAverage/PlayerAverage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { getSeasonAverage } from \"../../api/Api\";\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PlayerAverage = ({\n  player\n}) => {\n  _s();\n\n  const [playerAverage, setPlayerAverage] = useState(null);\n  useEffect(() => {\n    getSeasonAverage(player.id).then(data => setPlayerAverage(data));\n  }, [player.id]);\n\n  const getAverage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Season \", playerAverage.season]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"MIN: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: playerAverage.min\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"FGM: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: playerAverage.fgm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"FGA: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: playerAverage.fga || `-`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"FG3M: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: playerAverage.fg3m || `-`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"FG3A: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: playerAverage.fg3a || `-`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"OREB: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: playerAverage.oreb || `-`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"DREB: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: playerAverage.dreb || `-`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"REB: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: playerAverage.reb || `-`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      children: player && playerAverage ? getAverage() : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 62\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PlayerAverage, \"T7zUrQAEBGOHJxR2beyttVZV28c=\");\n\n_c = PlayerAverage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerAverage\");","map":{"version":3,"sources":["/Users/francesco/Documents/Progetti/frontend-assessment/src/components/playerAverage/PlayerAverage.js"],"names":["React","useState","useEffect","Row","Col","getSeasonAverage","PlayerAverage","player","playerAverage","setPlayerAverage","id","then","data","getAverage","season","min","fgm","fga","fg3m","fg3a","oreb","dreb","reb"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,iBAAvB;AACA,SAAQC,gBAAR,QAA+B,eAA/B;AACA,OAAO,6CAAP;;AAEA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAAA;;AACvC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,IAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,gBAAgB,CAACE,MAAM,CAACG,EAAR,CAAhB,CACKC,IADL,CACUC,IAAI,IAAIH,gBAAgB,CAACG,IAAD,CADlC;AAEH,GAHQ,EAGN,CAACL,MAAM,CAACG,EAAR,CAHM,CAAT;;AAKA,QAAMG,UAAU,GAAG,MAAM;AACrB,wBACI;AAAA,8BACI;AAAA,8BAAYL,aAAa,CAACM,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,yCAAQ;AAAA,oBAAIN,aAAa,CAACO;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,yCAAQ;AAAA,oBAAIP,aAAa,CAACQ;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,yCAAQ;AAAA,oBAAIR,aAAa,CAACS,GAAd,IAAsB;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA,0CAAS;AAAA,oBAAIT,aAAa,CAACU,IAAd,IAAuB;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,0CAAS;AAAA,oBAAIV,aAAa,CAACW,IAAd,IAAuB;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAA,0CAAS;AAAA,oBAAIX,aAAa,CAACY,IAAd,IAAuB;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAA,0CAAS;AAAA,oBAAIZ,aAAa,CAACa,IAAd,IAAuB;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AAAA,yCAAQ;AAAA,oBAAIb,aAAa,CAACc,GAAd,IAAsB;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH,GAdD;;AAgBA,sBACI,QAAC,GAAD;AAAA,2BACI,QAAC,GAAD;AAAA,gBAEQf,MAAM,IAAIC,aAAV,GAA0BK,UAAU,EAApC,gBAAyC;AAAA;AAAA;AAAA;AAAA;AAFjD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAjCM;;GAAMP,a;;KAAAA,a","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {Row, Col} from 'react-bootstrap';\nimport {getSeasonAverage} from \"../../api/Api\";\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\n\nexport const PlayerAverage = ({player}) => {\n    const [playerAverage, setPlayerAverage] = useState(null);\n\n    useEffect(() => {\n        getSeasonAverage(player.id)\n            .then(data => setPlayerAverage(data));\n    }, [player.id]);\n\n    const getAverage = () => {\n        return (\n            <div>\n                <h3>Season {playerAverage.season}</h3>\n                <p>MIN: <b>{playerAverage.min}</b></p>\n                <p>FGM: <b>{playerAverage.fgm}</b></p>\n                <p>FGA: <b>{playerAverage.fga || `-`}</b></p>\n                <p>FG3M: <b>{playerAverage.fg3m || `-`}</b></p>\n                <p>FG3A: <b>{playerAverage.fg3a || `-`}</b></p>\n                <p>OREB: <b>{playerAverage.oreb || `-`}</b></p>\n                <p>DREB: <b>{playerAverage.dreb || `-`}</b></p>\n                <p>REB: <b>{playerAverage.reb || `-`}</b></p>\n            </div>\n        );\n    }\n\n    return (\n        <Row>\n            <Col>\n                {\n                    player && playerAverage ? getAverage() : <div />\n                }\n            </Col>\n        </Row>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}